{"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-EdgarNegrin/src/notes.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-EdgarNegrin/src/notes.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":11},"end":{"line":4,"column":24}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":30}},"4":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"5":{"start":{"line":21,"column":12},"end":{"line":21,"column":38}},"6":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"7":{"start":{"line":24,"column":12},"end":{"line":24,"column":57}},"8":{"start":{"line":26,"column":8},"end":{"line":26,"column":27}},"9":{"start":{"line":35,"column":8},"end":{"line":45,"column":9}},"10":{"start":{"line":36,"column":25},"end":{"line":36,"column":72}},"11":{"start":{"line":37,"column":29},"end":{"line":37,"column":56}},"12":{"start":{"line":38,"column":12},"end":{"line":38,"column":68}},"13":{"start":{"line":39,"column":12},"end":{"line":39,"column":67}},"14":{"start":{"line":40,"column":12},"end":{"line":40,"column":28}},"15":{"start":{"line":43,"column":12},"end":{"line":43,"column":56}},"16":{"start":{"line":44,"column":12},"end":{"line":44,"column":36}},"17":{"start":{"line":53,"column":8},"end":{"line":67,"column":9}},"18":{"start":{"line":54,"column":12},"end":{"line":54,"column":54}},"19":{"start":{"line":55,"column":24},"end":{"line":55,"column":26}},"20":{"start":{"line":56,"column":12},"end":{"line":61,"column":15}},"21":{"start":{"line":57,"column":29},"end":{"line":57,"column":75}},"22":{"start":{"line":58,"column":33},"end":{"line":58,"column":60}},"23":{"start":{"line":59,"column":16},"end":{"line":59,"column":54}},"24":{"start":{"line":60,"column":16},"end":{"line":60,"column":72}},"25":{"start":{"line":62,"column":12},"end":{"line":62,"column":25}},"26":{"start":{"line":65,"column":12},"end":{"line":65,"column":56}},"27":{"start":{"line":66,"column":12},"end":{"line":66,"column":36}},"28":{"start":{"line":78,"column":8},"end":{"line":78,"column":31}},"29":{"start":{"line":79,"column":21},"end":{"line":79,"column":87}},"30":{"start":{"line":80,"column":8},"end":{"line":96,"column":9}},"31":{"start":{"line":81,"column":12},"end":{"line":89,"column":13}},"32":{"start":{"line":82,"column":16},"end":{"line":82,"column":71}},"33":{"start":{"line":83,"column":16},"end":{"line":83,"column":63}},"34":{"start":{"line":84,"column":16},"end":{"line":84,"column":41}},"35":{"start":{"line":87,"column":16},"end":{"line":87,"column":63}},"36":{"start":{"line":88,"column":16},"end":{"line":88,"column":43}},"37":{"start":{"line":92,"column":12},"end":{"line":92,"column":69}},"38":{"start":{"line":93,"column":12},"end":{"line":93,"column":67}},"39":{"start":{"line":94,"column":12},"end":{"line":94,"column":59}},"40":{"start":{"line":95,"column":12},"end":{"line":95,"column":37}},"41":{"start":{"line":105,"column":8},"end":{"line":113,"column":9}},"42":{"start":{"line":106,"column":12},"end":{"line":106,"column":54}},"43":{"start":{"line":107,"column":12},"end":{"line":107,"column":57}},"44":{"start":{"line":108,"column":12},"end":{"line":108,"column":35}},"45":{"start":{"line":111,"column":12},"end":{"line":111,"column":56}},"46":{"start":{"line":112,"column":12},"end":{"line":112,"column":36}},"47":{"start":{"line":122,"column":8},"end":{"line":131,"column":9}},"48":{"start":{"line":124,"column":16},"end":{"line":124,"column":28}},"49":{"start":{"line":126,"column":16},"end":{"line":126,"column":28}},"50":{"start":{"line":128,"column":16},"end":{"line":128,"column":28}},"51":{"start":{"line":130,"column":16},"end":{"line":130,"column":28}},"52":{"start":{"line":132,"column":8},"end":{"line":132,"column":51}},"53":{"start":{"line":133,"column":8},"end":{"line":133,"column":21}},"54":{"start":{"line":141,"column":8},"end":{"line":156,"column":9}},"55":{"start":{"line":143,"column":16},"end":{"line":143,"column":45}},"56":{"start":{"line":144,"column":16},"end":{"line":144,"column":22}},"57":{"start":{"line":146,"column":16},"end":{"line":146,"column":47}},"58":{"start":{"line":147,"column":16},"end":{"line":147,"column":22}},"59":{"start":{"line":149,"column":16},"end":{"line":149,"column":46}},"60":{"start":{"line":150,"column":16},"end":{"line":150,"column":22}},"61":{"start":{"line":152,"column":16},"end":{"line":152,"column":48}},"62":{"start":{"line":153,"column":16},"end":{"line":153,"column":22}},"63":{"start":{"line":155,"column":16},"end":{"line":155,"column":47}},"64":{"start":{"line":159,"column":0},"end":{"line":159,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":18},"end":{"line":14,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":22},"end":{"line":27,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":30},"end":{"line":46,"column":5}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":24},"end":{"line":68,"column":5}},"line":52},"4":{"name":"(anonymous_4)","decl":{"start":{"line":56,"column":59},"end":{"line":56,"column":60}},"loc":{"start":{"line":56,"column":69},"end":{"line":61,"column":13}},"line":56},"5":{"name":"(anonymous_5)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":43},"end":{"line":97,"column":5}},"line":77},"6":{"name":"(anonymous_6)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":32},"end":{"line":114,"column":5}},"line":104},"7":{"name":"(anonymous_7)","decl":{"start":{"line":121,"column":4},"end":{"line":121,"column":5}},"loc":{"start":{"line":121,"column":22},"end":{"line":134,"column":5}},"line":121},"8":{"name":"(anonymous_8)","decl":{"start":{"line":140,"column":4},"end":{"line":140,"column":5}},"loc":{"start":{"line":140,"column":31},"end":{"line":157,"column":5}},"line":140}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20},"1":{"loc":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},{"start":{"line":23,"column":8},"end":{"line":25,"column":9}}],"line":23},"2":{"loc":{"start":{"line":35,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":45,"column":9}},{"start":{"line":35,"column":8},"end":{"line":45,"column":9}}],"line":35},"3":{"loc":{"start":{"line":53,"column":8},"end":{"line":67,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":67,"column":9}},{"start":{"line":53,"column":8},"end":{"line":67,"column":9}}],"line":53},"4":{"loc":{"start":{"line":80,"column":8},"end":{"line":96,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":96,"column":9}},{"start":{"line":80,"column":8},"end":{"line":96,"column":9}}],"line":80},"5":{"loc":{"start":{"line":81,"column":12},"end":{"line":89,"column":13}},"type":"if","locations":[{"start":{"line":81,"column":12},"end":{"line":89,"column":13}},{"start":{"line":81,"column":12},"end":{"line":89,"column":13}}],"line":81},"6":{"loc":{"start":{"line":105,"column":8},"end":{"line":113,"column":9}},"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":113,"column":9}},{"start":{"line":105,"column":8},"end":{"line":113,"column":9}}],"line":105},"7":{"loc":{"start":{"line":122,"column":8},"end":{"line":131,"column":9}},"type":"switch","locations":[{"start":{"line":123,"column":12},"end":{"line":124,"column":28}},{"start":{"line":125,"column":12},"end":{"line":126,"column":28}},{"start":{"line":127,"column":12},"end":{"line":128,"column":28}},{"start":{"line":129,"column":12},"end":{"line":130,"column":28}}],"line":122},"8":{"loc":{"start":{"line":141,"column":8},"end":{"line":156,"column":9}},"type":"switch","locations":[{"start":{"line":142,"column":12},"end":{"line":144,"column":22}},{"start":{"line":145,"column":12},"end":{"line":147,"column":22}},{"start":{"line":148,"column":12},"end":{"line":150,"column":22}},{"start":{"line":151,"column":12},"end":{"line":153,"column":22}},{"start":{"line":154,"column":12},"end":{"line":155,"column":47}}],"line":141}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":2,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":2,"18":1,"19":1,"20":1,"21":2,"22":2,"23":2,"24":2,"25":1,"26":1,"27":1,"28":2,"29":2,"30":2,"31":1,"32":1,"33":1,"34":1,"35":0,"36":0,"37":1,"38":1,"39":1,"40":1,"41":2,"42":1,"43":1,"44":1,"45":1,"46":1,"47":2,"48":0,"49":0,"50":1,"51":1,"52":0,"53":0,"54":11,"55":3,"56":3,"57":4,"58":4,"59":1,"60":1,"61":3,"62":3,"63":0,"64":1},"f":{"0":1,"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":11},"b":{"0":[1,0],"1":[1,0],"2":[1,1],"3":[1,1],"4":[1,1],"5":[1,0],"6":[1,1],"7":[0,0,1,1],"8":[3,4,1,3,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-EdgarNegrin/src/notes.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-EdgarNegrin/src/notes.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport * as chalk from 'chalk';\n\n/**\n * Clase Notes \n */\nexport class Notes {\n  private static notes: Notes;\n\n  /**\n   * Constructor\n   */\n  private constructor() {\n  }\n\n  /**\n   * Getter de notes\n   * @returns notas tipo Notes\n   */\n  public static getNotes(): Notes {\n    if (!Notes.notes) {\n      Notes.notes = new Notes();\n    }\n    if (!fs.existsSync('./notes')) {\n      fs.mkdirSync('./notes', {recursive: true});\n    }\n    return Notes.notes;\n  }\n\n  /**\n   * Muestra una nota del usuario por titulo\n   * @param userName Nombre del usuario\n   * @param title Titulo de la nota\n   * @returns nota mostrada o string con error\n   */\n  public showNote(userName: string, title: string) {\n    if (fs.existsSync(`./notes/${userName}/${title}`)) {\n      const data = fs.readFileSync(`./notes/${userName}/${title}`);\n      const noteJson = JSON.parse(data.toString());\n      this.showWithColor(`${noteJson.title}`, noteJson.color);\n      this.showWithColor(`${noteJson.body}`, noteJson.color);\n      return noteJson;\n    } else {\n      this.showWithColor('Note not found', 'red')\n      return 'Note not found'\n    }\n  }\n\n  /**\n   * Muestra las notas de un usuario\n   * @param userName Nombre del usuario\n   * @returns Notas encontradas\n   */\n  public showNotes(userName: string): string {\n    if (fs.existsSync(`./notes/${userName}`)) {\n      this.showWithColor('Your notes', 'green');\n      let notes = '';\n      fs.readdirSync(`./notes/${userName}/`).forEach((note) => {\n        const data = fs.readFileSync(`./notes/${userName}/${note}`);\n        const noteJson = JSON.parse(data.toString());\n        notes = notes + noteJson.title + '\\n';\n        this.showWithColor(`${noteJson.title}`, noteJson.color);\n      });\n      return notes;\n    } else {\n      this.showWithColor('User not found', 'red');\n      return 'User not found';\n    }\n  }\n\n  /**\n   * Añade una nota\n   * @param userName Nombre de usuario\n   * @param title Titulo de la nota\n   * @param body Cuerpo de la nota\n   * @param color Color del texto\n   * @returns String con un aviso dependiendo del estado\n   */\n  public addNotes(userName: string, title: string, body: string, color: string): string {\n    this.validColor(color);\n    const note = `{ \"title\": \"${title}\", \"body\": \"${body}\" , \"color\": \"${color}\" }`;\n    if (fs.existsSync(`./notes/${userName}`)) {\n      if (!fs.existsSync(`./notes/${userName}/${title}`)) {\n        fs.writeFileSync(`./notes/${userName}/${title}`, note);\n        this.showWithColor('New note added!', 'green');\n        return 'New note added!';\n      } else {\n        this.showWithColor('Note title taken!', 'red');\n        return 'Note title taken!';\n      }\n    } else {\n      fs.mkdirSync(`./notes/${userName}`, {recursive: true});\n      fs.writeFileSync(`./notes/${userName}/${title}`, note);\n      this.showWithColor('New note added!', 'green');\n      return 'New note added!'\n    }\n  }\n\n  /**\n   * Elimina una nota de un usuario por titulo\n   * @param userName Nombre del usuario\n   * @param title Titulo de la nota\n   * @returns String con aviso dependiendo de estado\n   */\n  public removeNote(userName: string, title: string): string {\n    if (fs.existsSync(`./notes/${userName}/${title}`)) {\n      fs.rmSync(`./notes/${userName}/${title}`);\n      this.showWithColor('Note removed!', 'green')\n      return 'Note removed!';\n    } else {\n      this.showWithColor('Note not found', 'red');\n      return 'Note not found';\n    }\n  }\n\n  /**\n   * Comprueba la validacion del color introducido\n   * @param color Color introducido\n   * @returns Booleano con true en caso de ser valido \n   * o false en caso contrario\n   */\n  private validColor(color: string): boolean {\n    switch (color) {\n      case 'red':\n        return true;\n      case 'green':\n        return true;\n      case 'blue':\n        return true;\n      case 'yellow':\n        return true;\n    }\n    this.showWithColor('Invalid Color', 'red');\n    return false;\n  }\n\n  /**\n   * Muestra el texto en un color especifico o blanco por defecto\n   * @param text texto a mostrar\n   * @param color color \n   */\n  private showWithColor(text: string, color: string): void {\n    switch (color) {\n      case 'red':\n        console.log(chalk.red(text));\n        break;\n      case 'green':\n        console.log(chalk.green(text));\n        break;\n      case 'blue':\n        console.log(chalk.blue(text));\n        break;\n      case 'yellow':\n        console.log(chalk.yellow(text));\n        break;\n      default:\n        console.log(chalk.white(text));\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"20d1c865808d564c4d8dc84cf04a47fc123e5dfa","contentHash":"190079e468bfc94d1eb40678901258868c3c72b14ce5c96e30a4d53024a52975"}}